version: "3.9"

services:
  celery:
    restart: always
    build:
      context: .
    container_name: celery
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/app
      - ./.env.docker:/app/.env
    links:
      - redis
    depends_on:
      - backend
      - redis

  backend:
    build: .
    container_name: backend
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c "python manage.py collectstatic --no-input
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py fill
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static
      - ./.env.docker:/app/.env


  db:
    restart: always
    image: postgres
    container_name: db_courses
    env_file:
      - .env.docker
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf


  redis:
    image: redis
    container_name: redis
    expose:
      - "6379"
    ports:
      - "9999:8001"
      - "6379:6379"

    volumes:
      - ./redis-data:/var/lib/redis

  nginx:
    build: ./nginx
    container_name: nginx
    depends_on:
      - backend
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./static:/static


volumes:
  static:
  pgdata:
  redis-data:
  db:
    driver: local

